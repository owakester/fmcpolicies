From 1f8a1d0 Mon Sep 17 00:00:00 2001
From: Nilo <nilo@example.com>
Date: Fri, 19 Sep 2025 10:00:00 -0300
Subject: [feat] Policy details panel + rules count (FMC)

- Adds API helpers: getPolicyDetail(), getAccessRulesCount().
- UI: expandable card per policy showing:
  - Default Action, Inspection Mode, Intrusion Policy (if present)
  - Variable Sets (names)
  - Total Access Rules (via paging.count)
- Minor: better empty states and button to toggle details.

---
 src/api/fmc.js | 44 ++++++++++++++++++++++++++++++++++++++++++++
 src/App.vue    | 95 +++++++++++++++++++++++++++++++++++++++++++++++++++++++---
 2 files changed, 135 insertions(+), 4 deletions(-)

diff --git a/src/api/fmc.js b/src/api/fmc.js
index 1111111..2222222 100644
--- a/src/api/fmc.js
+++ b/src/api/fmc.js
@@ -1,6 +1,7 @@
 import axios from 'axios'

 const api = axios.create({
   baseURL: '/fmc',
   validateStatus: s => s >= 200 && s < 500
 })
@@
 export async function getAccessPolicies({ accessToken, domainUUID, limit = 50, offset = 0 }) {
   const res = await api.get(`/api/fmc_config/v1/domain/${domainUUID}/policy/accesspolicies`, {
     headers: { 'X-auth-access-token': accessToken },
     params: { expanded: true, limit, offset }
   })
   if (res.status === 401) throw new Error('Unauthorized')
   if (res.status !== 200) {
     throw new Error(`Policies failed: ${res.status} ${res.statusText}`)
   }
   return res.data
 }
+
+/**
+ * Detalle de una Access Policy
+ * GET /api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{policyId}
+ */
+export async function getPolicyDetail({ accessToken, domainUUID, policyId }) {
+  const res = await api.get(`/api/fmc_config/v1/domain/${domainUUID}/policy/accesspolicies/${policyId}`, {
+    headers: { 'X-auth-access-token': accessToken }
+  })
+  if (res.status === 401) throw new Error('Unauthorized')
+  if (res.status !== 200) {
+    throw new Error(`Policy detail failed: ${res.status} ${res.statusText}`)
+  }
+  return res.data
+}
+
+/**
+ * Cuenta de Access Rules dentro de una policy.
+ * Truco: pedir 1 elemento y leer paging.count
+ * GET /api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{policyId}/accessrules?limit=1
+ */
+export async function getAccessRulesCount({ accessToken, domainUUID, policyId }) {
+  const res = await api.get(`/api/fmc_config/v1/domain/${domainUUID}/policy/accesspolicies/${policyId}/accessrules`, {
+    headers: { 'X-auth-access-token': accessToken },
+    params: { limit: 1, offset: 0 }
+  })
+  if (res.status === 401) throw new Error('Unauthorized')
+  if (res.status == 404) {
+    return 0
+  }
+  if (res.status !== 200) {
+    throw new Error(`Rules count failed: ${res.status} ${res.statusText}`)
+  }
+  const paging = res.data?.paging
+  const count = (paging && (paging.count ?? paging?.['count'])) ?? res.data?.count ?? 0
+  return count
+}
diff --git a/src/App.vue b/src/App.vue
index 3333333..4444444 100644
--- a/src/App.vue
+++ b/src/App.vue
@@ -1,9 +1,10 @@
 <script setup>
 import { ref, computed } from 'vue'
-import { loginFMC, refreshTokens, getDomains, getAccessPolicies } from './api/fmc.js'
+import { loginFMC, refreshTokens, getDomains, getAccessPolicies, getPolicyDetail, getAccessRulesCount } from './api/fmc.js'

 const username = ref('')
 const password = ref('')
 const isLoading = ref(false)
 const tokens = ref({ accessToken: null, refreshToken: null })
 const domains = ref([])
 const selectedDomain = ref('')
 const policies = ref([])
 const paging = ref({ limit: 50, offset: 0, count: 0 })
 const errorMsg = ref('')
+const openDetails = ref({}) // policyId:boolean

 const isAuthed = computed(() => !!tokens.value.accessToken)

@@ -49,6 +50,44 @@ async function loadPolicies() {
     isLoading.value = false
   }
 }
+
+async function toggleDetails(policy) {
+  const id = policy.id
+  openDetails.value[id] = !openDetails.value[id]
+  if (openDetails.value[id]) {
+    // Lazy-load details on open
+    try {
+      policy.__loading = true
+      const [detail, rulesCount] = await Promise.all([
+        getPolicyDetail({
+          accessToken: tokens.value.accessToken,
+          domainUUID: selectedDomain.value,
+          policyId: id
+        }),
+        getAccessRulesCount({
+          accessToken: tokens.value.accessToken,
+          domainUUID: selectedDomain.value,
+          policyId: id
+        })
+      ])
+      policy.__detail = detail
+      policy.__rulesCount = rulesCount
+    } catch (e) {
+      policy.__detailError = e.message || String(e)
+    } finally {
+      policy.__loading = false
+    }
+  }
+}
+
+function fmt(obj, path, fallback='—') {
+  try {
+    return path.split('.').reduce((o,k)=>o?.[k], obj) ?? fallback
+  } catch { return fallback }
+}
+
+const hasPolicies = computed(() => (policies.value?.length ?? 0) > 0)
+
 function nextPage() {
   paging.value.offset += paging.value.limit
   loadPolicies()
@@ -84,12 +123,62 @@
         <div class="bg-slate-900/50 border border-slate-800 rounded-2xl">
           <div class="p-4 border-b border-slate-800 flex items-center justify-between">
             <h3 class="font-semibold">Policies ({{ policies.length }})</h3>
             <span class="text-xs text-slate-400">offset {{ paging.offset }} · limit {{ paging.limit }} · total {{ paging.count }}</span>
           </div>

-          <ul class="divide-y divide-slate-800">
-            <li v-for="p in policies" :key="p.id" class="p-4 hover:bg-slate-900">
+          <ul class="divide-y divide-slate-800">
+            <li v-for="p in policies" :key="p.id" class="p-4 hover:bg-slate-900">
               <div class="flex items-center justify-between">
                 <div>
                   <div class="font-medium">{{ p.name }}</div>
                   <div class="text-xs text-slate-400">ID: {{ p.id }} · Type: {{ p.type }} · {{ p.metadata?.comments || 'No comments' }}</div>
                 </div>
-                <span class="text-xs px-2 py-1 rounded bg-slate-800 border border-slate-700"
-                  >{{ p.state || '—' }}</span>
+                <div class="flex items-center gap-2">
+                  <button @click="toggleDetails(p)" class="px-2 py-1 rounded-lg bg-slate-800 border border-slate-700 text-xs">
+                    {{ openDetails[p.id] ? 'Hide' : 'Details' }}
+                  </button>
+                  <span class="text-xs px-2 py-1 rounded bg-slate-800 border border-slate-700">
+                    {{ p.state || '—' }}
+                  </span>
+                </div>
               </div>
+
+              <!-- details -->
+              <div v-if="openDetails[p.id]" class="mt-3 rounded-xl border border-slate-800 bg-slate-900/70">
+                <div v-if="p.__loading" class="p-4 text-sm text-slate-400">Loading details…</div>
+                <div v-else-if="p.__detailError" class="p-4 text-sm text-rose-400">{{ p.__detailError }}</div>
+                <div v-else class="p-4 grid sm:grid-cols-2 gap-4 text-sm">
+                  <div>
+                    <div class="text-slate-300 mb-1">Default Action</div>
+                    <div class="text-slate-400">{{ fmt(p.__detail, 'defaultAction.action', '—') }}</div>
+                  </div>
+                  <div>
+                    <div class="text-slate-300 mb-1">Inspection Mode</div>
+                    <div class="text-slate-400">{{ fmt(p.__detail, 'inspectionMode', '—') }}</div>
+                  </div>
+                  <div>
+                    <div class="text-slate-300 mb-1">Intrusion Policy</div>
+                    <div class="text-slate-400">{{ fmt(p.__detail, 'intrusionPolicy.name', '—') }}</div>
+                  </div>
+                  <div>
+                    <div class="text-slate-300 mb-1">Rules in Policy</div>
+                    <div class="text-slate-400">{{ p.__rulesCount ?? '—' }}</div>
+                  </div>
+                  <div class="sm:col-span-2">
+                    <div class="text-slate-300 mb-1">Variable Sets</div>
+                    <div class="flex flex-wrap gap-2">
+                      <span v-for="vs in (p.__detail?.variableSets ?? [])" :key="vs.id"
+                            class="inline-flex items-center px-2 py-0.5 rounded bg-slate-800 border border-slate-700">
+                        {{ vs.name || vs.id }}
+                      </span>
+                      <span v-if="!(p.__detail?.variableSets?.length)" class="text-slate-500">—</span>
+                    </div>
+                  </div>
+                </div>
+              </div>
             </li>
           </ul>

-          <div v-if="!policies.length && !isLoading" class="p-6 text-center text-slate-400">
+          <div v-if="!hasPolicies && !isLoading" class="p-6 text-center text-slate-400">
             No policies found.
           </div>
           <div v-if="isLoading" class="p-6 text-center text-slate-400">
             Cargando...
           </div>
           <p v-if="errorMsg" class="p-4 text-sm text-rose-400">{{ errorMsg }}</p>
         </div>
       </section>
     </div>
   </div>
 </template>
-- 
2.39.2
